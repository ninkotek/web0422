@charset "utf-8";

/* 
선택자의 종류
1. 요소(태그, 타입)
2. 그룹: ,
3. 클래스 선택자: .이름

w1200 tap -> width:1200px;


*/
/* 레이아웃 유형1의 전체 크기 */
.container1 {
   
    width: 1200px;
    /* 콘텐츠를 가로 가운데 배치 */
    margin: 0 auto;
   
}
/* .div~4 는 레이아웃 유형 1의 각 박스 크기와 배경색 */
.div1 {
    background: yellow;
    height: 100px;
   
}
.div2 {
    background: tomato;
    height: 300px;
}
.div3 {
    background: orange;
    height: 200px;
}
.div4 {
    background: chocolate;
    height: 100px;
}
/* 레이아웃 유형 2 - 가로 */
/* 
    레이아웃 유형
    1. floating layout
    2. flexible layout
    3. grid layout
    4. positioning
    5. 블록레벨요소 속서을 인라인 요소 속성으로 바꾼다
*/
/*  5번 display (표시방식)
    display: block; -> 인라인요소 속성을 블록레벨 요소 속성으로 바꾼다.
    display: inline; -> 블록레벨 속성을 인라인요소 속성으로 바꾼다.
    display: inline-block;-> 인라인요소+블록레벨요소 두 속성을 모두 갖는다.
    display: none;-> 화면에서 요소를 제거

    블록레벨요소
    1. display: block;
    2. 세로 배치(위에서 아래, 줄 바꿈)
    3. 가로/세로 크기가 지정된다
    4. 가로는 100%, 세로는 내용(auto) 크기

    인라인요소
    1. display: inline;
    2. 가로 배치(왼쪽에서 오른쪽, 줄바꿈 안됨)
    3. 가로/세로는 내용 크기
    4. 가로/세로 크기가 지정되지 않는다

    5. display: inline-block; 
        - 가로 배치(왼쪽에서 오른쪽, 줄바꿈 안됨)
        - width/height는 내용 크기
        - width/height 크기가 지정된다.

 */
 /*  ctrl + d 
   vscode에서는 다중 선택  */
/* .div5~7는 레이아웃 유형 2의 각 박스 크기와 배경색 */
/* 레이아웃 유형2: inline-block */
/* 카멜 표기법 */
/* box_size, boxSize, bok-size */
.boxSize {
    width: 400px;
    height: 200px;
}

.container2 {
    display: inline-block;
    
}
.div5 {
    background: firebrick;    
}
.div6 {
    background: chocolate;    
}
.div7 {
    background: blue;    
}
/* 레이아웃 유형2: float */
/* float: left; -> 왼쪽을 기준으로 가로 배치
    float: right;  -> 오른쪽을 기준으로 가로 배치
*/

.container3 {
    float: left;
}

.container4 {    
    display: flex;
}